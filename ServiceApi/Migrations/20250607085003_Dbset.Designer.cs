// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceApi.Model;

#nullable disable

namespace ServiceApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607085003_Dbset")]
    partial class Dbset
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiceApi.Model.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ServiceApi.Model.VibeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("timeOfTest")
                        .HasColumnType("datetime2");

                    b.Property<long>("userID")
                        .HasColumnType("bigint");

                    b.Property<float>("vibeLevel")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("userID");

                    b.ToTable("Vibes");
                });

            modelBuilder.Entity("ServiceApi.Model.VibeModel", b =>
                {
                    b.HasOne("ServiceApi.Model.UserModel", "user")
                        .WithMany("vibeModels")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ServiceApi.Model.UserModel", b =>
                {
                    b.Navigation("vibeModels");
                });
#pragma warning restore 612, 618
        }
    }
}
